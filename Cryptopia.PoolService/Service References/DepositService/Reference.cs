//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptopia.PoolService.DepositService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWalletTransactionRequest", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.InboundService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class GetWalletTransactionRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TxIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyId {
            get {
                return this.CurrencyIdField;
            }
            set {
                if ((this.CurrencyIdField.Equals(value) != true)) {
                    this.CurrencyIdField = value;
                    this.RaisePropertyChanged("CurrencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TxId {
            get {
                return this.TxIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TxIdField, value) != true)) {
                    this.TxIdField = value;
                    this.RaisePropertyChanged("TxId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWalletTransactionResponse", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.InboundService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class GetWalletTransactionResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cryptopia.PoolService.DepositService.TransactionRawData TransactionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cryptopia.PoolService.DepositService.TransactionRawData TransactionData {
            get {
                return this.TransactionDataField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionDataField, value) != true)) {
                    this.TransactionDataField = value;
                    this.RaisePropertyChanged("TransactionData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionRawData", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.WalletAPI.DataObjects")]
    [System.SerializableAttribute()]
    public partial class TransactionRawData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string blockhashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint blocktimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int confirmationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int locktimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private uint timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string txidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int versionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Cryptopia.PoolService.DepositService.Vin> vinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Cryptopia.PoolService.DepositService.Vout> voutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string blockhash {
            get {
                return this.blockhashField;
            }
            set {
                if ((object.ReferenceEquals(this.blockhashField, value) != true)) {
                    this.blockhashField = value;
                    this.RaisePropertyChanged("blockhash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint blocktime {
            get {
                return this.blocktimeField;
            }
            set {
                if ((this.blocktimeField.Equals(value) != true)) {
                    this.blocktimeField = value;
                    this.RaisePropertyChanged("blocktime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int confirmations {
            get {
                return this.confirmationsField;
            }
            set {
                if ((this.confirmationsField.Equals(value) != true)) {
                    this.confirmationsField = value;
                    this.RaisePropertyChanged("confirmations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hex {
            get {
                return this.hexField;
            }
            set {
                if ((object.ReferenceEquals(this.hexField, value) != true)) {
                    this.hexField = value;
                    this.RaisePropertyChanged("hex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int locktime {
            get {
                return this.locktimeField;
            }
            set {
                if ((this.locktimeField.Equals(value) != true)) {
                    this.locktimeField = value;
                    this.RaisePropertyChanged("locktime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public uint time {
            get {
                return this.timeField;
            }
            set {
                if ((this.timeField.Equals(value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string txid {
            get {
                return this.txidField;
            }
            set {
                if ((object.ReferenceEquals(this.txidField, value) != true)) {
                    this.txidField = value;
                    this.RaisePropertyChanged("txid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int version {
            get {
                return this.versionField;
            }
            set {
                if ((this.versionField.Equals(value) != true)) {
                    this.versionField = value;
                    this.RaisePropertyChanged("version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Cryptopia.PoolService.DepositService.Vin> vin {
            get {
                return this.vinField;
            }
            set {
                if ((object.ReferenceEquals(this.vinField, value) != true)) {
                    this.vinField = value;
                    this.RaisePropertyChanged("vin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Cryptopia.PoolService.DepositService.Vout> vout {
            get {
                return this.voutField;
            }
            set {
                if ((object.ReferenceEquals(this.voutField, value) != true)) {
                    this.voutField = value;
                    this.RaisePropertyChanged("vout");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vin", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.WalletAPI.DataObjects")]
    [System.SerializableAttribute()]
    public partial class Vin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string coinbaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cryptopia.PoolService.DepositService.ScriptSig scriptSigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long sequenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string txidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int voutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string coinbase {
            get {
                return this.coinbaseField;
            }
            set {
                if ((object.ReferenceEquals(this.coinbaseField, value) != true)) {
                    this.coinbaseField = value;
                    this.RaisePropertyChanged("coinbase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cryptopia.PoolService.DepositService.ScriptSig scriptSig {
            get {
                return this.scriptSigField;
            }
            set {
                if ((object.ReferenceEquals(this.scriptSigField, value) != true)) {
                    this.scriptSigField = value;
                    this.RaisePropertyChanged("scriptSig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long sequence {
            get {
                return this.sequenceField;
            }
            set {
                if ((this.sequenceField.Equals(value) != true)) {
                    this.sequenceField = value;
                    this.RaisePropertyChanged("sequence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string txid {
            get {
                return this.txidField;
            }
            set {
                if ((object.ReferenceEquals(this.txidField, value) != true)) {
                    this.txidField = value;
                    this.RaisePropertyChanged("txid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int vout {
            get {
                return this.voutField;
            }
            set {
                if ((this.voutField.Equals(value) != true)) {
                    this.voutField = value;
                    this.RaisePropertyChanged("vout");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vout", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.WalletAPI.DataObjects")]
    [System.SerializableAttribute()]
    public partial class Vout : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cryptopia.PoolService.DepositService.ScriptPubKey scriptPubKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal valueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int n {
            get {
                return this.nField;
            }
            set {
                if ((this.nField.Equals(value) != true)) {
                    this.nField = value;
                    this.RaisePropertyChanged("n");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cryptopia.PoolService.DepositService.ScriptPubKey scriptPubKey {
            get {
                return this.scriptPubKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.scriptPubKeyField, value) != true)) {
                    this.scriptPubKeyField = value;
                    this.RaisePropertyChanged("scriptPubKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal value {
            get {
                return this.valueField;
            }
            set {
                if ((this.valueField.Equals(value) != true)) {
                    this.valueField = value;
                    this.RaisePropertyChanged("value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScriptSig", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.WalletAPI.DataObjects")]
    [System.SerializableAttribute()]
    public partial class ScriptSig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string asmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string asm {
            get {
                return this.asmField;
            }
            set {
                if ((object.ReferenceEquals(this.asmField, value) != true)) {
                    this.asmField = value;
                    this.RaisePropertyChanged("asm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hex {
            get {
                return this.hexField;
            }
            set {
                if ((object.ReferenceEquals(this.hexField, value) != true)) {
                    this.hexField = value;
                    this.RaisePropertyChanged("hex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScriptPubKey", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.WalletAPI.DataObjects")]
    [System.SerializableAttribute()]
    public partial class ScriptPubKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> addressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string asmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int reqSigsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> addresses {
            get {
                return this.addressesField;
            }
            set {
                if ((object.ReferenceEquals(this.addressesField, value) != true)) {
                    this.addressesField = value;
                    this.RaisePropertyChanged("addresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string asm {
            get {
                return this.asmField;
            }
            set {
                if ((object.ReferenceEquals(this.asmField, value) != true)) {
                    this.asmField = value;
                    this.RaisePropertyChanged("asm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hex {
            get {
                return this.hexField;
            }
            set {
                if ((object.ReferenceEquals(this.hexField, value) != true)) {
                    this.hexField = value;
                    this.RaisePropertyChanged("hex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int reqSigs {
            get {
                return this.reqSigsField;
            }
            set {
                if ((this.reqSigsField.Equals(value) != true)) {
                    this.reqSigsField = value;
                    this.RaisePropertyChanged("reqSigs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWalletInfoResponse", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.InboundService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class GetWalletInfoResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cryptopia.PoolService.DepositService.GetInfoData InfoDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Cryptopia.PoolService.DepositService.PeerInfo> PeerInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cryptopia.PoolService.DepositService.GetInfoData InfoData {
            get {
                return this.InfoDataField;
            }
            set {
                if ((object.ReferenceEquals(this.InfoDataField, value) != true)) {
                    this.InfoDataField = value;
                    this.RaisePropertyChanged("InfoData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Cryptopia.PoolService.DepositService.PeerInfo> PeerInfo {
            get {
                return this.PeerInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.PeerInfoField, value) != true)) {
                    this.PeerInfoField = value;
                    this.RaisePropertyChanged("PeerInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetInfoData", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.WalletAPI.DataObjects")]
    [System.SerializableAttribute()]
    public partial class GetInfoData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HashrateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal balanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int blocksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int connectionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double difficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string versionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Hashrate {
            get {
                return this.HashrateField;
            }
            set {
                if ((this.HashrateField.Equals(value) != true)) {
                    this.HashrateField = value;
                    this.RaisePropertyChanged("Hashrate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal balance {
            get {
                return this.balanceField;
            }
            set {
                if ((this.balanceField.Equals(value) != true)) {
                    this.balanceField = value;
                    this.RaisePropertyChanged("balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int blocks {
            get {
                return this.blocksField;
            }
            set {
                if ((this.blocksField.Equals(value) != true)) {
                    this.blocksField = value;
                    this.RaisePropertyChanged("blocks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int connections {
            get {
                return this.connectionsField;
            }
            set {
                if ((this.connectionsField.Equals(value) != true)) {
                    this.connectionsField = value;
                    this.RaisePropertyChanged("connections");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double difficulty {
            get {
                return this.difficultyField;
            }
            set {
                if ((this.difficultyField.Equals(value) != true)) {
                    this.difficultyField = value;
                    this.RaisePropertyChanged("difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errors {
            get {
                return this.errorsField;
            }
            set {
                if ((object.ReferenceEquals(this.errorsField, value) != true)) {
                    this.errorsField = value;
                    this.RaisePropertyChanged("errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                if ((object.ReferenceEquals(this.versionField, value) != true)) {
                    this.versionField = value;
                    this.RaisePropertyChanged("version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeerInfo", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.WalletAPI.DataObjects")]
    [System.SerializableAttribute()]
    public partial class PeerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int startingheightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string addr {
            get {
                return this.addrField;
            }
            set {
                if ((object.ReferenceEquals(this.addrField, value) != true)) {
                    this.addrField = value;
                    this.RaisePropertyChanged("addr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int startingheight {
            get {
                return this.startingheightField;
            }
            set {
                if ((this.startingheightField.Equals(value) != true)) {
                    this.startingheightField = value;
                    this.RaisePropertyChanged("startingheight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWalletBlockRequest", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.InboundService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class GetWalletBlockRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlockHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BlockHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlockHash {
            get {
                return this.BlockHashField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockHashField, value) != true)) {
                    this.BlockHashField = value;
                    this.RaisePropertyChanged("BlockHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlockHeight {
            get {
                return this.BlockHeightField;
            }
            set {
                if ((this.BlockHeightField.Equals(value) != true)) {
                    this.BlockHeightField = value;
                    this.RaisePropertyChanged("BlockHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyId {
            get {
                return this.CurrencyIdField;
            }
            set {
                if ((this.CurrencyIdField.Equals(value) != true)) {
                    this.CurrencyIdField = value;
                    this.RaisePropertyChanged("CurrencyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWalletBlockResponse", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.InboundService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class GetWalletBlockResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cryptopia.PoolService.DepositService.BlockData BlockDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cryptopia.PoolService.DepositService.BlockData BlockData {
            get {
                return this.BlockDataField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockDataField, value) != true)) {
                    this.BlockDataField = value;
                    this.RaisePropertyChanged("BlockData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlockData", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.WalletAPI.DataObjects")]
    [System.SerializableAttribute()]
    public partial class BlockData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int confirmationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double difficultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string hashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string merklerootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nextblockhashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long nonceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string previousblockhashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> txField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string versionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bits {
            get {
                return this.bitsField;
            }
            set {
                if ((object.ReferenceEquals(this.bitsField, value) != true)) {
                    this.bitsField = value;
                    this.RaisePropertyChanged("bits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int confirmations {
            get {
                return this.confirmationsField;
            }
            set {
                if ((this.confirmationsField.Equals(value) != true)) {
                    this.confirmationsField = value;
                    this.RaisePropertyChanged("confirmations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double difficulty {
            get {
                return this.difficultyField;
            }
            set {
                if ((this.difficultyField.Equals(value) != true)) {
                    this.difficultyField = value;
                    this.RaisePropertyChanged("difficulty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string hash {
            get {
                return this.hashField;
            }
            set {
                if ((object.ReferenceEquals(this.hashField, value) != true)) {
                    this.hashField = value;
                    this.RaisePropertyChanged("hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string merkleroot {
            get {
                return this.merklerootField;
            }
            set {
                if ((object.ReferenceEquals(this.merklerootField, value) != true)) {
                    this.merklerootField = value;
                    this.RaisePropertyChanged("merkleroot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nextblockhash {
            get {
                return this.nextblockhashField;
            }
            set {
                if ((object.ReferenceEquals(this.nextblockhashField, value) != true)) {
                    this.nextblockhashField = value;
                    this.RaisePropertyChanged("nextblockhash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long nonce {
            get {
                return this.nonceField;
            }
            set {
                if ((this.nonceField.Equals(value) != true)) {
                    this.nonceField = value;
                    this.RaisePropertyChanged("nonce");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string previousblockhash {
            get {
                return this.previousblockhashField;
            }
            set {
                if ((object.ReferenceEquals(this.previousblockhashField, value) != true)) {
                    this.previousblockhashField = value;
                    this.RaisePropertyChanged("previousblockhash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int size {
            get {
                return this.sizeField;
            }
            set {
                if ((this.sizeField.Equals(value) != true)) {
                    this.sizeField = value;
                    this.RaisePropertyChanged("size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string time {
            get {
                return this.timeField;
            }
            set {
                if ((object.ReferenceEquals(this.timeField, value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> tx {
            get {
                return this.txField;
            }
            set {
                if ((object.ReferenceEquals(this.txField, value) != true)) {
                    this.txField = value;
                    this.RaisePropertyChanged("tx");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string version {
            get {
                return this.versionField;
            }
            set {
                if ((object.ReferenceEquals(this.versionField, value) != true)) {
                    this.versionField = value;
                    this.RaisePropertyChanged("version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWalletFeeResponse", Namespace="http://schemas.datacontract.org/2004/07/Cryptopia.InboundService.DataObjects")]
    [System.SerializableAttribute()]
    public partial class GetWalletFeeResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((this.FeeField.Equals(value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DepositService.IWalletInbound")]
    public interface IWalletInbound {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/CreateAddress", ReplyAction="http://tempuri.org/IWalletInbound/CreateAddressResponse")]
        System.Collections.Generic.List<string> CreateAddress(int walletId, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/CreateAddress", ReplyAction="http://tempuri.org/IWalletInbound/CreateAddressResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> CreateAddressAsync(int walletId, System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/ValidateAddress", ReplyAction="http://tempuri.org/IWalletInbound/ValidateAddressResponse")]
        bool ValidateAddress(int walletId, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/ValidateAddress", ReplyAction="http://tempuri.org/IWalletInbound/ValidateAddressResponse")]
        System.Threading.Tasks.Task<bool> ValidateAddressAsync(int walletId, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/GetTransaction", ReplyAction="http://tempuri.org/IWalletInbound/GetTransactionResponse")]
        Cryptopia.PoolService.DepositService.GetWalletTransactionResponse GetTransaction(Cryptopia.PoolService.DepositService.GetWalletTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/GetTransaction", ReplyAction="http://tempuri.org/IWalletInbound/GetTransactionResponse")]
        System.Threading.Tasks.Task<Cryptopia.PoolService.DepositService.GetWalletTransactionResponse> GetTransactionAsync(Cryptopia.PoolService.DepositService.GetWalletTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/GetInfo", ReplyAction="http://tempuri.org/IWalletInbound/GetInfoResponse")]
        Cryptopia.PoolService.DepositService.GetWalletInfoResponse GetInfo(int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/GetInfo", ReplyAction="http://tempuri.org/IWalletInbound/GetInfoResponse")]
        System.Threading.Tasks.Task<Cryptopia.PoolService.DepositService.GetWalletInfoResponse> GetInfoAsync(int currencyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/GetBlock", ReplyAction="http://tempuri.org/IWalletInbound/GetBlockResponse")]
        Cryptopia.PoolService.DepositService.GetWalletBlockResponse GetBlock(Cryptopia.PoolService.DepositService.GetWalletBlockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/GetBlock", ReplyAction="http://tempuri.org/IWalletInbound/GetBlockResponse")]
        System.Threading.Tasks.Task<Cryptopia.PoolService.DepositService.GetWalletBlockResponse> GetBlockAsync(Cryptopia.PoolService.DepositService.GetWalletBlockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/GetWalletFee", ReplyAction="http://tempuri.org/IWalletInbound/GetWalletFeeResponse")]
        Cryptopia.PoolService.DepositService.GetWalletFeeResponse GetWalletFee(int currencyId, decimal amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWalletInbound/GetWalletFee", ReplyAction="http://tempuri.org/IWalletInbound/GetWalletFeeResponse")]
        System.Threading.Tasks.Task<Cryptopia.PoolService.DepositService.GetWalletFeeResponse> GetWalletFeeAsync(int currencyId, decimal amount);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWalletInboundChannel : Cryptopia.PoolService.DepositService.IWalletInbound, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WalletInboundClient : System.ServiceModel.ClientBase<Cryptopia.PoolService.DepositService.IWalletInbound>, Cryptopia.PoolService.DepositService.IWalletInbound {
        
        public WalletInboundClient() {
        }
        
        public WalletInboundClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WalletInboundClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WalletInboundClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WalletInboundClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<string> CreateAddress(int walletId, System.Guid userId) {
            return base.Channel.CreateAddress(walletId, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> CreateAddressAsync(int walletId, System.Guid userId) {
            return base.Channel.CreateAddressAsync(walletId, userId);
        }
        
        public bool ValidateAddress(int walletId, string address) {
            return base.Channel.ValidateAddress(walletId, address);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateAddressAsync(int walletId, string address) {
            return base.Channel.ValidateAddressAsync(walletId, address);
        }
        
        public Cryptopia.PoolService.DepositService.GetWalletTransactionResponse GetTransaction(Cryptopia.PoolService.DepositService.GetWalletTransactionRequest request) {
            return base.Channel.GetTransaction(request);
        }
        
        public System.Threading.Tasks.Task<Cryptopia.PoolService.DepositService.GetWalletTransactionResponse> GetTransactionAsync(Cryptopia.PoolService.DepositService.GetWalletTransactionRequest request) {
            return base.Channel.GetTransactionAsync(request);
        }
        
        public Cryptopia.PoolService.DepositService.GetWalletInfoResponse GetInfo(int currencyId) {
            return base.Channel.GetInfo(currencyId);
        }
        
        public System.Threading.Tasks.Task<Cryptopia.PoolService.DepositService.GetWalletInfoResponse> GetInfoAsync(int currencyId) {
            return base.Channel.GetInfoAsync(currencyId);
        }
        
        public Cryptopia.PoolService.DepositService.GetWalletBlockResponse GetBlock(Cryptopia.PoolService.DepositService.GetWalletBlockRequest request) {
            return base.Channel.GetBlock(request);
        }
        
        public System.Threading.Tasks.Task<Cryptopia.PoolService.DepositService.GetWalletBlockResponse> GetBlockAsync(Cryptopia.PoolService.DepositService.GetWalletBlockRequest request) {
            return base.Channel.GetBlockAsync(request);
        }
        
        public Cryptopia.PoolService.DepositService.GetWalletFeeResponse GetWalletFee(int currencyId, decimal amount) {
            return base.Channel.GetWalletFee(currencyId, amount);
        }
        
        public System.Threading.Tasks.Task<Cryptopia.PoolService.DepositService.GetWalletFeeResponse> GetWalletFeeAsync(int currencyId, decimal amount) {
            return base.Channel.GetWalletFeeAsync(currencyId, amount);
        }
    }
}
