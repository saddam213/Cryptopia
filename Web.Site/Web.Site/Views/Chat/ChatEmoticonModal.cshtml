@model Web.Site.Models.Chat.ChatEmoticonViewModel
@{
	Layout = "~/Views/Shared/_Modal.cshtml";
}

<div class="modal-dialog">
	<div class="modal-content">
		<div class="modal-header">
			<button class="close simplemodal-close" aria-hidden="true" type="button" onclick="$.modal.close();">×</button>
			<h3 class="modal-title">@Resources.Chat.emoticonHeadline</h3>
		</div>
		<div class="modal-body">
			<div class="row">
				<div class="col-xs-12">
					<div class="col-xs-4">
						@Html.Label("", Resources.Chat.emoticonCategoryLabel, new { @class = "control-label nopad" })
						@Html.DropDownList("Category", new SelectList(Model.Categories), Resources.Chat.emoticonCategoryPlaceholder, new { @class = "form-control input-sm" })
						@Html.Label("", Resources.Chat.emoticonSearchLabel, new { @class = "control-label" })
						@Html.TextBox("Search", "", new { id="emoticonSerach", @class = "form-control  input-sm" })
					</div>
					<div class="emoticon-preview col-xs-8">
						<div class="preview-container">
							<div class="img-container">
								<img id="preview-img" />
							</div>
						</div>
						<div class="detail">
							<div class="detail-item ">
								<b>@Resources.Chat.emoticonNameLabel: </b>
								<span id="preview-name"></span>
							</div>
							<div class="detail-item ">
								<b>@Resources.Chat.emoticonCodeLabel: </b>
								<span id="preview-code"></span>
							</div>
						</div>
					</div>
				</div>
			</div>
			<hr />
			<div class="emoticon-list-container ">
				<div class="row">
					<div id="emoticon-list" class="col-xs-12">
						@foreach (var emoticon in Model.Emoticons)
						{
							<div class="emoticon" title="@emoticon.Name" data-code="@emoticon.Code" data-name="@emoticon.Name" data-search="@emoticon.Name.ToLower()" data-category="@emoticon.Category" data-img="@emoticon.Path">
								<div class="emoticon_img_contaner">
									<div class="emoticon_img" style="background-image: url('@CdnHelper.RenderImage("/Content/Images/EmoticonSet/{0}", emoticon.Path)');"></div>
								</div>
							</div>
						}
					</div>
				</div>
			</div>

		</div>
		<div class="modal-footer">
			<button class="btn btn-info" type="button" onclick="$.modal.close();">@Cryptopia.Resources.General.Cancel</button>
			<button id="submit" class="btn btn-info" disabled="disabled">@Resources.Chat.emoticonAddButton</button>
		</div>
	</div>
</div>

@Scripts.Render("~/Scripts/Bundle/validation_bundle.min.js")

<script>
	$('.emoticon').on('click', function () {
		$('#preview-img').attr('src', '@CdnHelper.ImagePath()' + '/Content/Images/EmoticonSet/' + $(this).data('img'));
		$('#preview-name').html($(this).data('name'));
		$('#preview-code').html($(this).data('code'));
		$('#submit').removeAttr('disabled');
	});

	$('#submit').on('click', function () {
		var selectedEmote = $('#preview-code').text();
		if (selectedEmote) {
			var chatInputBox = $('.chat-message');
			if (chatInputBox) {
				chatInputBox.val(chatInputBox.val() + selectedEmote + " ");
				chatInputBox.focus();
				chatInputBox.caretToEnd();
			}
		}
		$.modal.close();
	});

	$('#Category').on('change', function () {
		filterEmoticons();
	});

	$("#emoticonSerach").on('keyup', function () {
		filterEmoticons();
	});

	function filterEmoticons() {
		var searchValue = $('#emoticonSerach').val().toLowerCase();
		var selectedCategory = $('#Category').val();
		if (!searchValue && !selectedCategory) {
			$('.emoticon').show();
			return;
		}

		$('.emoticon').hide();
		if (searchValue && !selectedCategory) {
			$('#emoticon-list').find("[data-search*='" + searchValue + "']").show();
		}
		else if (!searchValue && selectedCategory) {
			$('#emoticon-list').find("[data-category='" + selectedCategory + "']").show();
		}
		else if (searchValue && selectedCategory) {
			$('#emoticon-list').find("[data-category='" + selectedCategory + "'][data-search*='" + searchValue + "']").show();
		}
	}



</script>
