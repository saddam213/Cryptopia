@model Cryptopia.Common.Support.UserSupportModel
@{
	ViewBag.Title = Resources.Support.userPageTitle;
}

@Html.AntiForgeryToken()
<div class="row">
	<div class="col-xs-12">
		<h2>@ViewBag.Title</h2>
		<hr />

		<div>
			<h4>@Resources.Support.userSummaryText</h4>
			<button onclick="createTicket();" class="btn btn-info">@Resources.Support.userCreateTicketButton</button>
		</div>
		<hr />
	</div>
</div>


<div class="row">

	<div id="message-alert" class="alert text-center" style="display: none">
		<p></p>
	</div>

	<div class="col-xs-12">
		<div class="panel panel-primary">
			<div class="panel-heading" style="padding: 5px">
				<span><i class="fa fa-ticket panel-icon"></i>@Resources.Support.userOpenTicketsHeadline</span>
			</div>
			<div class="panel-body">
				<ul id="ticket-list" class="list-group" style="max-height: 400px; overflow-y: auto">
					@if (Model.SupportTickets.Any(x => x.Status != Cryptopia.Enums.SupportTicketStatus.Closed))
					{
						foreach (var ticket in Model.SupportTickets.Where(x => x.Status != Cryptopia.Enums.SupportTicketStatus.Closed).OrderByDescending(x => x.LastUpdate))
						{
						<li class="list-group-item">
							<div class="row">
								<div class="col-xs-12">
									<h4>
										<a class="btn-link" href="/Support/SupportTicket?ticketId=@ticket.Id">@string.Format("#{0} - {1} - {2}", ticket.Id, ticket.Category, ticket.Title)</a>
									</h4>
									<p>
										@ticket.Description
									</p>
								</div>
							</div>
							<div class="row">
								<div class="col-xs-12 col-sm-12 col-md-8" style="margin-bottom:10px">
									<span class="label label-primary">@Resources.Support.ticketOpenedLabel: @ticket.Created</span>
									@switch (ticket.Status)
									{
										case Cryptopia.Enums.SupportTicketStatus.New:
										<span class="label label-info">@Resources.Support.ticketNewStatus</span>
											break;
										case Cryptopia.Enums.SupportTicketStatus.UserReply:
										<span class="label label-warning">@Resources.Support.ticketAwaitingStatus</span>
											break;
										case Cryptopia.Enums.SupportTicketStatus.AdminReply:
										<span class="label label-success">@Resources.Support.ticketRepliedStatus</span>
											break;
										case Cryptopia.Enums.SupportTicketStatus.Closed:
										<span class="label label-danger">@Resources.Support.ticketClosedStatus</span>
											break;
										default:
											break;
									}
								</div>

								<div class="col-xs-12 col-sm-12 col-md-4">
									<a class="btn btn-info btn-xs button-180 pull-right" href="/Support/SupportTicket?ticketId=@ticket.Id">@Resources.Support.ticketViewButton</a>
								</div>

							</div>
						</li>
						}
					}
					else
					{
					<li id="notickets" class="list-group-item"><span>@Resources.Support.userOpenTicketsEmptyListMessage</span></li>
					}
				</ul>
			</div>
		</div>
	</div>
</div>

<div class="row">
	<div class="col-xs-12">
		<div class="panel panel-primary">
			<div class="panel-heading" style="padding: 5px">
				<span><i class="fa fa-history panel-icon"></i>@Resources.Support.userClosedTicketsHeadline</span>
			</div>
			<div class="panel-body">
				<ul class="list-group" style="max-height: 400px; overflow-y: auto">
					@if (Model.SupportTickets.Any(x => x.Status == Cryptopia.Enums.SupportTicketStatus.Closed))
					{
						foreach (var ticket in Model.SupportTickets.Where(x => x.Status == Cryptopia.Enums.SupportTicketStatus.Closed).OrderByDescending(x => x.LastUpdate))
						{
						<li class="list-group-item">
							<div class="row">
								<div class="col-xs-12">
									<a class="btn-link" href="/Support/SupportTicket?ticketId=@ticket.Id">@string.Format("#{0} - {1} - {2}", ticket.Id, ticket.Category, ticket.Title)</a>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-8" style="margin-bottom:10px">
									<span class="label label-primary">@Resources.Support.ticketClosedLabel: @ticket.LastUpdate</span>
								</div>
								<div class="col-xs-12 col-sm-12 col-md-4">
									<a class="btn btn-info btn-xs button-180 pull-right" href="/Support/SupportTicket?ticketId=@ticket.Id">@Resources.Support.ticketViewButton</a>
								</div>
							</div>
						</li>
						}
					}
					else
					{
					<li class="list-group-item"><span>@Resources.Support.userClosedTicketsEmptyListMessage</span></li>
					}
				</ul>
			</div>
		</div>
	</div>
</div>


<script type="text/javascript">

	function createTicket() {
		openModalGet('/Support/CreateTicket', null, function (data) {
			showMessage(data);
			if (data.Success) {
				var messageTemplate = $("#ticketTemplate").html();
				$("#notickets").remove();
				$("#ticket-list").prepend(Mustache.render(messageTemplate, data.Data));
			}
		});
	}

</script>


<script id="ticketTemplate" type="text/html">
	<li class="list-group-item">
		<div class="row">
			<div class="col-xs-12">
				<h4>
					<a class="btn-link" href="/Support/SupportTicket?ticketId={{TicketId}}">#{{TicketId}} - {{CategoryName}} - {{Subject}}</a>
				</h4>
				<p>
					{{Description}}
				</p>
			</div>
		</div>
		<div class="row">
			<div class="col-xs-12 col-sm-12 col-md-8" style="margin-bottom:10px">
				<span class="label label-primary">@Resources.Support.ticketOpenedLabel: {{Created}}</span>
				<span class="label label-info">@Resources.Support.ticketNewStatus</span>
			</div>
			<div class="col-xs-12 col-sm-12 col-md-4">
				<a class="btn btn-info btn-xs button-180 pull-right" href="/Support/SupportTicket?ticketId={{TicketId}}">@Resources.Support.ticketViewButton</a>
			</div>
		</div>
	</li>
</script>